import telebot
from telebot import types

bot = telebot.TeleBot('6213169353:AAEzp-fJCys0_I4lLvri_LZ-Y5pWZ6HWgHQ')


@bot.message_handler(commands=['start'])
def start(message):
    first_name = message.from_user.first_name
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ì–µ–æ–º–µ—Ç—Ä–∏—èüìï')
    btn2 = types.KeyboardButton('–ê–ª–≥–µ–±—Ä–∞üìí')
    btn3 = types.KeyboardButton('–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—èüìó')
    markup.row(btn1, btn2, btn3)
    btn4 = types.KeyboardButton('–®–∫–∞–ª–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –±–∞–ª–ª–æ–≤ –ï–ì–≠üìù')
    btn5 = types.KeyboardButton('–ü–æ–ª–µ–∑–Ω—ã–µ –∫–∞–Ω–∞–ª—ãüìå')
    btn6 = types.KeyboardButton('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ï–ì–≠üßê')
    btn7 = types.KeyboardButton('–ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—èü§ì')
    markup.row(btn4, btn5, btn6, btn7)
    bot.send_message(message.chat.id, text=f'–ü—Ä–∏–≤–µ—Ç, {first_name}!'
                                           f' –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –∫ –ï–ì–≠ –ø–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.',
                     reply_markup=markup)


@bot.message_handler(regexp='–ù–µ—Ç')
@bot.message_handler(regexp='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
def main_menu(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ì–µ–æ–º–µ—Ç—Ä–∏—èüìï')
    btn2 = types.KeyboardButton('–ê–ª–≥–µ–±—Ä–∞üìí')
    btn3 = types.KeyboardButton('–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—èüìó')
    markup.row(btn1, btn2, btn3)
    btn4 = types.KeyboardButton('–®–∫–∞–ª–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –±–∞–ª–ª–æ–≤ –ï–ì–≠üìù')
    btn5 = types.KeyboardButton('–ü–æ–ª–µ–∑–Ω—ã–µ –∫–∞–Ω–∞–ª—ãüìå')
    btn6 = types.KeyboardButton('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ï–ì–≠üßê')
    btn7 = types.KeyboardButton('–ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—èü§ì')
    markup.row(btn4, btn5, btn6, btn7)
    bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                     reply_markup=markup)


@bot.message_handler(regexp='–ì–µ–æ–º–µ—Ç—Ä–∏—èüìï')
def geometry(message):
    if message.text == '–ì–µ–æ–º–µ—Ç—Ä–∏—èüìï':
        markup = types.ReplyKeyboardMarkup()
        butn1 = types.KeyboardButton('–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è')
        butn2 = types.KeyboardButton('–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è')
        butn3 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(butn1, butn2, butn3)
        bot.send_message(message.chat.id, '–¢—É—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è —Ç–µ–æ—Ä–∏—è –∫ –±–ª–æ–∫–∞–º –ø–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è –∏ —Å—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è. –ü–æ–ª—å–∑—É–π—Å—èüòâ',
                         reply_markup=markup)


@bot.message_handler(regexp='–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è')
def planimetry(message):
    bot.send_document(message.chat.id, document=open('2023-08-01_19-40-36.pdf', 'rb'))


@bot.message_handler(regexp='–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è')
def stereometry(message):
    bot.send_document(message.chat.id, document=open('Teoria_k_zadaniyu_2.pdf', 'rb'))


@bot.message_handler(regexp='–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—èüìó')
def trigonometry(message):
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ë–æ–ª—å—à–æ–π —Ñ–∞–π–ª —Å –æ–±—â–µ–π —Ç–µ–æ—Ä–∏–µ–π –æ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏–∏')
    markup.row(btn1)
    btn2 = types.KeyboardButton('–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å')
    btn3 = types.KeyboardButton('–§–æ—Ä–º—É–ª—ã –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è')
    markup.row(btn2, btn3)
    btn4 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    markup.row(btn4)
    bot.send_message(message.chat.id, '–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏–µ–πüòé', reply_markup=markup)


@bot.message_handler(regexp='–ë–æ–ª—å—à–æ–π —Ñ–∞–π–ª —Å –æ–±—â–µ–π —Ç–µ–æ—Ä–∏–µ–π –æ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏–∏')
def big_f(message):
    bot.send_document(message.chat.id, document=open('Trigonometria_Alles_v2.pdf', 'rb'))


@bot.message_handler(regexp='–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å')
def tryg_circle(message):
    bot.send_photo(message.chat.id, photo=open('2023-08-05_18-12-10.png', 'rb'))


@bot.message_handler(regexp='–§–æ—Ä–º—É–ª—ã –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è')
def formulae(message):
    bot.send_photo(message.chat.id, photo=open('2023-08-05_18-30-13.png', 'rb'))


@bot.message_handler(regexp='–ê–ª–≥–µ–±—Ä–∞üìí')
def algebra(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–õ–æ–≥–∞—Ä–∏—Ñ–º—ã')
    btn2 = types.KeyboardButton('–ü—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ')
    btn3 = types.KeyboardButton('–°—Ç–µ–ø–µ–Ω–∏ –∏ –∫–æ—Ä–Ω–∏')
    btn4 = types.KeyboardButton('–§—É–Ω–∫—Ü–∏–∏')
    markup.row(btn1, btn2, btn3, btn4)
    btn5 = types.KeyboardButton('–§–æ—Ä–º—É–ª—ã —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è –∏ —É—Ä–∞–≤–Ω–µ–Ω–∏—è')
    btn6 = types.KeyboardButton('–ú–æ–¥—É–ª–∏ –∏ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏')
    btn7 = types.KeyboardButton('–ú–µ—Ç–æ–¥ —Ä–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ —Ç–µ–æ—Ä–∏—è –∫ 9 –∑–∞–¥–∞–Ω–∏—é')
    btn8 = types.KeyboardButton('–ì—Ä–∞—Ñ–∏–∫–∏')
    markup.add(btn5, btn6, btn7, btn8)
    btn9 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    markup.add(btn9)
    bot.send_message(message.chat.id, '–ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª —É–∑–Ω–∞—Ç—å –æ –∞–ª–≥–µ–±—Ä–µ?', reply_markup=markup)


@bot.message_handler(regexp='–õ–æ–≥–∞—Ä–∏—Ñ–º—ã')
def logarifmi(message):
    bot.send_photo(message.chat.id, photo=open('2023-08-07_21-02-23.png', 'rb'))


@bot.message_handler(regexp='–ü—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ')
def proizvodnie(message):
    bot.send_photo(message.chat.id, photo=open('2023-08-07_21-02-58.png', 'rb'))


@bot.message_handler(regexp='–°—Ç–µ–ø–µ–Ω–∏ –∏ –∫–æ—Ä–Ω–∏')
def step_korni(message):
    bot.send_photo(message.chat.id, photo=open('2023-08-07_21-03-30.png', 'rb'))


@bot.message_handler(regexp='–§—É–Ω–∫—Ü–∏–∏')
def funcii(message):
    bot.send_document(message.chat.id, document=open('Teoria_k_zadaniyu_10.pdf', 'rb'))


@bot.message_handler(regexp='–§–æ—Ä–º—É–ª—ã —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è –∏ —É—Ä–∞–≤–Ω–µ–Ω–∏—è')
def f_s_m(message):
    bot.send_photo(message.chat.id, photo=open('2023-08-07_21-04-17.png', 'rb'))


@bot.message_handler(regexp='–ú–æ–¥—É–ª–∏ –∏ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏')
def moduls(message):
    bot.send_photo(message.chat.id, photo=open('2023-08-07_21-04-46.png', 'rb'))


@bot.message_handler(regexp='–ú–µ—Ç–æ–¥ —Ä–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ —Ç–µ–æ—Ä–∏—è –∫ 9 –∑–∞–¥–∞–Ω–∏—é')
def m_z_m(message):
    bot.send_photo(message.chat.id, photo=open('2023-08-07_21-05-21.png', 'rb'))


@bot.message_handler(regexp='–ì—Ä–∞—Ñ–∏–∫–∏')
def grafics(message):
    bot.send_document(message.chat.id, document=open('Teoria_k_zadaniyu_7.pdf', 'rb'))


@bot.message_handler(regexp='–®–∫–∞–ª–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –±–∞–ª–ª–æ–≤ –ï–ì–≠üìù')
def shkala(message):
    bot.send_photo(message.chat.id, photo=open('2023-08-10_17-31-27.png', 'rb'))
    bot.send_message(message.chat.id, '–ö—Ä–∞—Å–Ω—ã–º –æ–±–æ–∑–Ω–∞—á–µ–Ω –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≤—É–∑.'
                                      '\n–ó–µ–ª–µ–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –æ–∑–Ω–∞—á–∞–µ—Ç –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω—É.')


@bot.message_handler(regexp='–ü–æ–ª–µ–∑–Ω—ã–µ –∫–∞–Ω–∞–ª—ãüìå')
def useful_channels(message):
    bot.send_message(message.chat.id, '–ú–æ–≥—É –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å —ç—Ç–∏ –∫–∞–Ω–∞–ª—ã:'
                                      '\n–®–∫–æ–ª–∞ –ü–∏—Ñ–∞–≥–æ—Ä–∞ –ï–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ'
                                      '\n(https://www.youtube.com/@pifagor1)'
                                      '\n–ú–∞—Ç–µ–º–∞—Ç–∏–∫ –ú–ì–£(https://www.youtube.com/@hitman_math)')


@bot.message_handler(regexp='–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ï–ì–≠üßê')
def structure(message):
    bot.send_message(message.chat.id, '1 —á–∞—Å—Ç—å:'
                                      '\n–í –Ω–µ–π —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è 11 –∑–∞–¥–∞–Ω–∏–π —Å –∫—Ä–∞—Ç–∫–∏–º –æ—Ç–≤–µ—Ç–æ–º.'
                                      '–ü—Ä–∏–Ω–æ—Å–∏—Ç 11 –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –±–∞–ª–ª–æ–≤ –∏–ª–∏ 64 –≤—Ç–æ—Ä–∏—á–Ω—ã—Ö.'
                                      '\n2 —á–∞—Å—Ç—å:'
                                      '\n–í –Ω–µ–π —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è 7 –∑–∞–¥–∞–Ω–∏–π —Å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–º –æ—Ç–≤–µ—Ç–æ–º.'
                                      ' –ü—Ä–∏–Ω–æ—Å–∏—Ç 20 –±–∞–ª–ª–æ–≤ –∑–∞ –ø–æ–ª–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ.')


@bot.message_handler(regexp='–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—è–º')
@bot.message_handler(regexp='–ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—èü§ì')
def test(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('–ó–∞–¥–∞–Ω–∏–µ 1')
    btn2 = types.KeyboardButton('–ó–∞–¥–∞–Ω–∏–µ 2')
    btn3 = types.KeyboardButton('–ó–∞–¥–∞–Ω–∏–µ 3')
    btn4 = types.KeyboardButton('–ó–∞–¥–∞–Ω–∏–µ 4')
    btn5 = types.KeyboardButton('–ó–∞–¥–∞–Ω–∏–µ 5')
    btn6 = types.KeyboardButton('–ó–∞–¥–∞–Ω–∏–µ 6')
    btn7 = types.KeyboardButton('–ó–∞–¥–∞–Ω–∏–µ 7')
    btn8 = types.KeyboardButton('–ó–∞–¥–∞–Ω–∏–µ 8')
    btn9 = types.KeyboardButton('–ó–∞–¥–∞–Ω–∏–µ 9')
    btn10 = types.KeyboardButton('10 –∑–∞–¥–∞–Ω–∏–µ')
    btn11 = types.KeyboardButton('11 –∑–∞–¥–∞–Ω–∏–µ')
    btn12 = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn10, btn11, btn12)
    bot.send_message(message.chat.id, '–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è –∏–∑ –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏ –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–∏—Ö.'
                                      '\n–¢–µ–±–µ –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ 4 –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∏ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π.', reply_markup=markup)


user_task = {}


@bot.message_handler(regexp='–ó–∞–¥–∞–Ω–∏–µ 1')
def zadanie_1(message):
    if message.text == '–ó–∞–¥–∞–Ω–∏–µ 1':
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_task[message.chat.id] = '–ó–∞–¥–∞–Ω–∏–µ 1'

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('45')
        btn2 = types.KeyboardButton('55')
        btn3 = types.KeyboardButton('90')
        btn4 = types.KeyboardButton('125')
        btn5 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—è–º')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_photo(message.chat.id, photo=open('2023-08-14_20-34-43.png', 'rb'), reply_markup=markup)


@bot.message_handler(
    func=lambda message: message.text in ['45', '55', '90', '125'] and user_task.get(message.chat.id) == '–ó–∞–¥–∞–Ω–∏–µ 1')
def check_answer(message):
    if message.text == '55':
        bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    # –û—á–∏—â–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_task.pop(message.chat.id, None)


@bot.message_handler(regexp='–ó–∞–¥–∞–Ω–∏–µ 2')
def zadanie_2(message):
    if message.text == '–ó–∞–¥–∞–Ω–∏–µ 2':
        user_task[message.chat.id] = '–ó–∞–¥–∞–Ω–∏–µ 2'

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('90')
        btn2 = types.KeyboardButton('60')
        btn3 = types.KeyboardButton('30')
        btn4 = types.KeyboardButton('45')
        btn5 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—è–º')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_photo(message.chat.id, photo=open('2023-08-14_20-36-33.png', 'rb'), reply_markup=markup)


@bot.message_handler(
    func=lambda message: message.text in ['90', '60', '30', '45'] and user_task.get(message.chat.id) == '–ó–∞–¥–∞–Ω–∏–µ 2')
def check_answer_2(message):
    if message.text == '60':
        bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    user_task.pop(message.chat.id, None)


@bot.message_handler(regexp='–ó–∞–¥–∞–Ω–∏–µ 3')
def zadanie_3(message):
    if message.text == '–ó–∞–¥–∞–Ω–∏–µ 3':
        user_task[message.chat.id] = '–ó–∞–¥–∞–Ω–∏–µ 3'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('0,4')
        btn2 = types.KeyboardButton('0,35')
        btn3 = types.KeyboardButton('0,2')
        btn4 = types.KeyboardButton('0,6')
        btn5 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—è–º')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_photo(message.chat.id, photo=open('2023-08-14_20-37-22.png', 'rb'), reply_markup=markup)


@bot.message_handler(
    func=lambda message: message.text in ['0,4', '0,35', '0,2', '0,6'] and user_task.get(message.chat.id) == '–ó–∞–¥–∞–Ω–∏–µ 3')
def check_answer_2(message):
    if message.text == '0,4':
        bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    user_task.pop(message.chat.id, None)


@bot.message_handler(regexp='–ó–∞–¥–∞–Ω–∏–µ 4')
def zadanie_4(message):
    if message.text == '–ó–∞–¥–∞–Ω–∏–µ 4':
        user_task[message.chat.id] = '–ó–∞–¥–∞–Ω–∏–µ 4'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('0,45')
        btn2 = types.KeyboardButton('0,65')
        btn3 = types.KeyboardButton('0,8')
        btn4 = types.KeyboardButton('0,55')
        btn5 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—è–º')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_photo(message.chat.id, photo=open('2023-08-14_20-40-18.png', 'rb'), reply_markup=markup)


@bot.message_handler(
    func=lambda message: message.text in ['0,45', '0,65', '0,8', '0,55'] and user_task.get(message.chat.id) == '–ó–∞–¥–∞–Ω–∏–µ 4')
def check_answer_2(message):
    if message.text == '0,55':
        bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    user_task.pop(message.chat.id, None)


@bot.message_handler(regexp='–ó–∞–¥–∞–Ω–∏–µ 5')
def zadanie_5(message):
    if message.text == '–ó–∞–¥–∞–Ω–∏–µ 5':
        user_task[message.chat.id] = '–ó–∞–¥–∞–Ω–∏–µ 5'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('3')
        btn2 = types.KeyboardButton('5')
        btn3 = types.KeyboardButton('11')
        btn4 = types.KeyboardButton('2')
        btn5 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—è–º')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_photo(message.chat.id, photo=open('2023-08-14_20-41-33.png', 'rb'), reply_markup=markup)


@bot.message_handler(
    func=lambda message: message.text in ['3', '5', '11', '2'] and user_task.get(message.chat.id) == '–ó–∞–¥–∞–Ω–∏–µ 5')
def check_answer_2(message):
    if message.text == '2':
        bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    user_task.pop(message.chat.id, None)


@bot.message_handler(regexp='–ó–∞–¥–∞–Ω–∏–µ 6')
def zadanie_6(message):
    if message.text == '–ó–∞–¥–∞–Ω–∏–µ 6':
        user_task[message.chat.id] = '–ó–∞–¥–∞–Ω–∏–µ 6'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('0,2')
        btn2 = types.KeyboardButton('25')
        btn3 = types.KeyboardButton('5')
        btn4 = types.KeyboardButton('125')
        btn5 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—è–º')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_photo(message.chat.id, photo=open('2023-08-14_20-45-48.png', 'rb'), reply_markup=markup)


@bot.message_handler(
    func=lambda message: message.text in ['0,2', '5', '25', '125'] and user_task.get(message.chat.id) == '–ó–∞–¥–∞–Ω–∏–µ 6')
def check_answer_2(message):
    if message.text == '5':
        bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    user_task.pop(message.chat.id, None)


@bot.message_handler(regexp='–ó–∞–¥–∞–Ω–∏–µ 7')
def zadanie_7(message):
    if message.text == '–ó–∞–¥–∞–Ω–∏–µ 7':
        user_task[message.chat.id] = '–ó–∞–¥–∞–Ω–∏–µ 7'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('4')
        btn2 = types.KeyboardButton('3')
        btn3 = types.KeyboardButton('5')
        btn4 = types.KeyboardButton('1')
        btn5 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—è–º')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_photo(message.chat.id, photo=open('2023-08-14_20-49-25.png', 'rb'), reply_markup=markup)


@bot.message_handler(
    func=lambda message: message.text in ['4', '3', '5', '1'] and user_task.get(message.chat.id) == '–ó–∞–¥–∞–Ω–∏–µ 7')
def check_answer_2(message):
    if message.text == '3':
        bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    user_task.pop(message.chat.id, None)


@bot.message_handler(regexp='–ó–∞–¥–∞–Ω–∏–µ 8')
def zadanie_8(message):
    if message.text == '–ó–∞–¥–∞–Ω–∏–µ 8':
        user_task[message.chat.id] = '–ó–∞–¥–∞–Ω–∏–µ 8'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('0,445')
        btn2 = types.KeyboardButton('0,5')
        btn3 = types.KeyboardButton('0,45')
        btn4 = types.KeyboardButton('0,625')
        btn5 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—è–º')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_photo(message.chat.id, photo=open('2023-08-14_20-51-48.png', 'rb'), reply_markup=markup)


@bot.message_handler(
    func=lambda message: message.text in ['0,445', '0,5', '0,45', '0,625'] and user_task.get(message.chat.id) == '–ó–∞–¥–∞–Ω–∏–µ 8')
def check_answer_2(message):
    if message.text == '0,445':
        bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    user_task.pop(message.chat.id, None)


@bot.message_handler(regexp='–ó–∞–¥–∞–Ω–∏–µ 9')
def zadanie_9(message):
    if message.text == '–ó–∞–¥–∞–Ω–∏–µ 9':
        user_task[message.chat.id] = '–ó–∞–¥–∞–Ω–∏–µ 9'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('6')
        btn2 = types.KeyboardButton('18')
        btn3 = types.KeyboardButton('20')
        btn4 = types.KeyboardButton('30')
        btn5 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—è–º')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_photo(message.chat.id, photo=open('2023-08-14_21-07-14.png', 'rb'), reply_markup=markup)


@bot.message_handler(
    func=lambda message: message.text in ['6', '18', '20', '30'] and user_task.get(message.chat.id) == '–ó–∞–¥–∞–Ω–∏–µ 9')
def check_answer_2(message):
    if message.text == '18':
        bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    user_task.pop(message.chat.id, None)


@bot.message_handler(regexp='10 –∑–∞–¥–∞–Ω–∏–µ')
def zadanie_10(message):
    if message.text == '10 –∑–∞–¥–∞–Ω–∏–µ':
        user_task[message.chat.id] = '10 –∑–∞–¥–∞–Ω–∏–µ'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('8')
        btn2 = types.KeyboardButton('-4')
        btn3 = types.KeyboardButton('-5')
        btn4 = types.KeyboardButton('10')
        btn5 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—è–º')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_photo(message.chat.id, photo=open('2023-08-14_21-06-40.png', 'rb'), reply_markup=markup)


@bot.message_handler(
    func=lambda message: message.text in ['8', '-4', '-5', '10'] and user_task.get(message.chat.id) == '10 –∑–∞–¥–∞–Ω–∏–µ')
def check_answer_2(message):
    if message.text == '8':
        bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    user_task.pop(message.chat.id, None)


@bot.message_handler(regexp='11 –∑–∞–¥–∞–Ω–∏–µ')
def zadanie_11(message):
    if message.text == '11 –∑–∞–¥–∞–Ω–∏–µ':
        user_task[message.chat.id] = '11 –∑–∞–¥–∞–Ω–∏–µ'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('2')
        btn2 = types.KeyboardButton('4')
        btn3 = types.KeyboardButton('14')
        btn4 = types.KeyboardButton('0')
        btn5 = types.KeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—è–º')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_photo(message.chat.id, photo=open('2023-08-14_21-15-16.png', 'rb'), reply_markup=markup)


@bot.message_handler(
    func=lambda message: message.text in ['2', '4', '14', '0'] and user_task.get(message.chat.id) == '11 –∑–∞–¥–∞–Ω–∏–µ')
def check_answer_2(message):
    if message.text == '8':
        bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç')
    user_task.pop(message.chat.id, None)


bot.polling(none_stop=True)